// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using invoice_project.Models;

#nullable disable

namespace invoice1_project.Migrations
{
    [DbContext(typeof(Entity))]
    [Migration("20221002205355_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("invoice_project.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("invoice_project.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<DateTime>("invoice_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("store_id")
                        .HasColumnType("int");

                    b.Property<float>("tax")
                        .HasColumnType("real");

                    b.Property<int>("totalCost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("customer_id");

                    b.HasIndex("store_id");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("invoice_project.Models.InvoiceItem", b =>
                {
                    b.Property<int>("invoice_id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("item_id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("invoice_id", "item_id");

                    b.HasIndex("item_id");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("invoice_project.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("invoice_project.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("invoice_project.Models.Invoice", b =>
                {
                    b.HasOne("invoice_project.Models.Customer", "customer")
                        .WithMany("invoices")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("invoice_project.Models.Store", "Store")
                        .WithMany("Invoices")
                        .HasForeignKey("store_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("invoice_project.Models.InvoiceItem", b =>
                {
                    b.HasOne("invoice_project.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("invoice_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("invoice_project.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("invoice_project.Models.Customer", b =>
                {
                    b.Navigation("invoices");
                });

            modelBuilder.Entity("invoice_project.Models.Store", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
